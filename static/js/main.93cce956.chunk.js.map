{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","src","alt","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","imgChange","fetch","then","response","json","memes","data","setState","event","target","name","value","this","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","URL","createObjectURL","files","className","onSubmit","type","placeholder","onChange","accept","href","download","Component","App","on","mode","backgroundColor","color","colorChange","style","height","tColor","React","ReactDOM","render","document","getElementById"],"mappings":"uOAceA,EAZA,WACX,OACI,gCACI,yBACIC,IAAI,iEACJC,IAAI,aAER,+C,OCkEGC,G,wDAxEX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,IAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAVP,E,gEAaO,IAAD,OAChBG,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAASF,EAASG,KAAlBD,MACP,EAAKE,SAAS,CAAEX,YAAaS,S,mCAI5BG,GAAQ,IAAD,EACMA,EAAMC,OAArBC,EADS,EACTA,KAAMC,EADG,EACHA,MACbC,KAAKL,SAAL,eAAiBG,EAAOC,M,mCAGfH,GACTA,EAAMK,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,KAAKpB,MAAMI,YAAYsB,QAC5DC,EAAcP,KAAKpB,MAAMI,YAAYkB,GAASM,IACpDR,KAAKL,SAAS,CAAEZ,UAAWwB,M,gCAErBX,GACRI,KAAKL,SAAS,CACZZ,UAAW0B,IAAIC,gBAAgBd,EAAMC,OAAOc,MAAM,Q,+BAIlD,OACI,6BACI,0BAAMC,UAAU,YAAYC,SAAUb,KAAKb,cACvC,2BACI2B,KAAK,OACLhB,KAAK,UACLiB,YAAY,WACZhB,MAAOC,KAAKpB,MAAMC,QAClBmC,SAAUhB,KAAKf,eAEnB,2BACI6B,KAAK,OACLhB,KAAK,aACLiB,YAAY,cACZhB,MAAOC,KAAKpB,MAAME,WAClBkC,SAAUhB,KAAKf,eAEnB,2BAAO6B,KAAK,OAAOhB,KAAK,WAAWmB,OAAO,mCAAmCD,SAAUhB,KAAKZ,YAC5F,wCAEJ,yBAAKwB,UAAU,QACX,gCAAQ,yBAAKnC,IAAKuB,KAAKpB,MAAMG,UAAWL,IAAI,WAC5C,wBAAIkC,UAAU,OAAOZ,KAAKpB,MAAMC,SAChC,wBAAI+B,UAAU,UAAUZ,KAAKpB,MAAME,aAEvC,gCACE,4BAAQ8B,UAAU,OAAM,uBAAGA,UAAU,mBAAqB,uBAAGM,KAAMlB,KAAKpB,MAAMG,UAAWoC,SAAUnB,KAAKpB,MAAMG,WAApD,oB,GAlEhDqC,cC4CbC,G,wDAzCb,aAAc,IAAD,8BACX,gBACKzC,MAAM,CACT0C,IAAI,EACJC,KAAM,YACNC,gBAAiB,QACjBC,MAAO,SAET,EAAKC,YAAY,EAAKA,YAAYxC,KAAjB,gBARN,E,0DAWX,OAAmB,IAAhBc,KAAKpB,MAAM0C,GACLtB,KAAKL,SAAS,CACnB2B,IAAI,EACJC,KAAM,YACNC,gBAAiB,UACjBC,MAAO,UAEFzB,KAAKL,SAAS,CACrB2B,IAAI,EACJC,KAAM,aACNC,gBAAiB,QACjBC,MAAO,Y,+BAKT,OACE,yBAAKE,MAAO,CAACH,gBAAiBxB,KAAKpB,MAAM4C,gBAAiBC,MAAMzB,KAAKpB,MAAM6C,MAAOG,OAAQ,UAC1F,kBAAC,EAAD,CAAQC,OAAQ7B,KAAKpB,MAAM6C,QAC3B,kBAAC,EAAD,MACA,2BAAOb,UAAU,UAEf,2BAAOE,KAAK,WAAWE,SAAUhB,KAAK0B,cACtC,0BAAMd,UAAU,gBAAgBZ,KAAKpB,MAAM2C,Y,GAnCjCO,IAAMV,YCAxBW,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.93cce956.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <img\r\n                src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n                alt=\"Problem?\"\r\n            />\r\n            <p >Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {Component} from \"react\"\r\nimport './DownloadBtn.css'\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.imgChange = this.imgChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                this.setState({ allMemeImgs: memes })\r\n            })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randMemeImg = this.state.allMemeImgs[randNum].url\r\n        this.setState({ randomImg: randMemeImg })\r\n    }\r\n    imgChange(event){\r\n      this.setState({\r\n        randomImg: URL.createObjectURL(event.target.files[0])\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"topText\"\r\n                        placeholder=\"Top Text\"\r\n                        value={this.state.topText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"bottomText\"\r\n                        placeholder=\"Bottom Text\"\r\n                        value={this.state.bottomText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <input type=\"file\" name=\"filename\" accept=\"image/gif, image/jpeg, image/png\" onChange={this.imgChange} />\r\n                    <button>Gen</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <center><img src={this.state.randomImg} alt=\"Image\" /></center>\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n                <center>\r\n                  <button className=\"btn\"><i className=\"fa fa-download\"></i><a href={this.state.randomImg} download={this.state.randomImg} > Download</a></button>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator\r\n","import React, { Component } from 'react'\r\nimport Header from './Header'\r\nimport MemeGenerator from './MemeGenerator'\r\nimport './App.css'\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      on: false,\r\n      mode: \"Dark Mode\",\r\n      backgroundColor: \"white\",\r\n      color: \"black\"\r\n    }\r\n    this.colorChange=this.colorChange.bind(this)\r\n  }\r\n  colorChange(){\r\n    if(this.state.on===false){\r\n      return this.setState({\r\n        on: true,\r\n        mode: \"Dark Mode\",\r\n        backgroundColor: \"#262833\",\r\n        color: \"white\"\r\n      })\r\n    } return this.setState({\r\n      on: false,\r\n      mode: \"White Mode\",\r\n      backgroundColor: \"white\",\r\n      color: \"black\"\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{backgroundColor: this.state.backgroundColor, color:this.state.color, height: '100vh'}}>\r\n      <Header tColor={this.state.color}/>\r\n      <MemeGenerator />\r\n      <label className=\"switch\">\r\n\r\n        <input type=\"checkbox\" onChange={this.colorChange}/>\r\n        <span className=\"slider round\">{this.state.mode}</span>\r\n      </label>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'))\r\n"],"sourceRoot":""}